[
  {
    "name": "Aggregate:Basic",
    "query": "select * from `films`",
    "type": "aggregate",
    "output": {
      "collections": ["films"],
      "pipeline": []
    }
  },
  {
    "name": "Aggregate:Basic limit",
    "query": "select * from `films` limit 10",
    "type": "aggregate",
    "output": {
      "collections": ["films"],
      "pipeline": [
        {
          "$limit": 10
        }
      ]
    }
  },
  {
    "name": "Aggregate:Basic limit and offset",
    "query": "select * from `films` limit 10 offset 5",
    "type": "aggregate",
    "output": {
      "collections": ["films"],
      "pipeline": [
        {
          "$limit": 10
        },
        {
          "$skip": 5
        }
      ]
    }
  },
  {
    "name": "Aggregate:Basic with select",
    "query": "select Title,Rating from `films`",
    "type": "aggregate",
    "output": {
      "collections": ["films"],
      "pipeline": [
        {
          "$project": {
            "Title": "$Title",
            "Rating": "$Rating"
          }
        }
      ]
    }
  },
  {
    "name": "Aggregate:Select function",
    "query": "select abs(`Replacement Cost`) as aggr from `films`",
    "type": "aggregate",
    "output": {
      "collections": ["films"],
      "pipeline": [
        {
          "$project": {
            "aggr": {
              "$abs": "$Replacement Cost"
            }
          }
        }
      ]
    }
  },
  {
    "query": "select id,Title,Rating from `films` where abs(id)=1",
    "type": "aggregate",
    "output": {
      "collections": ["films"],
      "pipeline": [
        {
          "$match": {
            "$expr": {
              "$eq": [
                {
                  "$abs": "$id"
                },
                1
              ]
            }
          }
        },
        {
          "$project": {
            "id": "$id",
            "Title": "$Title",
            "Rating": "$Rating"
          }
        }
      ]
    }
  },
  {
    "query": "select id,Title,Rating from `films` where abs(id)=1 or abs(id)=2",
    "type": "aggregate",
    "output": {
      "collections": ["films"],
      "pipeline": [
        {
          "$match": {
            "$or": [
              {
                "$expr": {
                  "$eq": [
                    {
                      "$abs": "$id"
                    },
                    1
                  ]
                }
              },
              {
                "$expr": {
                  "$eq": [
                    {
                      "$abs": "$id"
                    },
                    2
                  ]
                }
              }
            ]
          }
        },
        {
          "$project": {
            "id": "$id",
            "Title": "$Title",
            "Rating": "$Rating"
          }
        }
      ]
    }
  },
  {
    "query": "select id,Title,Rating from `films` where sum_Array((select id as total from customers),'total') =1",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$match": {
            "$expr": {
              "$eq": [
                {
                  "$reduce": {
                    "input": {
                      "$map": {
                        "input": "$customers",
                        "in": {
                          "total": "$$this.id"
                        }
                      }
                    },
                    "initialValue": 0,
                    "in": {
                      "$sum": ["$$value", "$$this.total"]
                    }
                  }
                },
                1
              ]
            }
          }
        },
        {
          "$project": {
            "id": "$id",
            "Title": "$Title",
            "Rating": "$Rating"
          }
        }
      ],
      "collections": ["films"]
    }
  },
  {
    "query": "select `Replacement Cost` + 10 as aggr from `films`",
    "type": "aggregate",
    "output": {
      "collections": ["films"],
      "pipeline": [
        {
          "$project": {
            "aggr": {
              "$add": ["$Replacement Cost", 10]
            }
          }
        }
      ]
    }
  },
  {
    "query": "select CEIL(`Replacement Cost`) as aggr from `films`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "aggr": {
              "$ceil": "$Replacement Cost"
            }
          }
        }
      ],
      "collections": ["films"]
    }
  },
  {
    "query": "select `Replacement Cost` / 10 / 2 as aggr from `films`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "aggr": {
              "$divide": [
                {
                  "$divide": ["$Replacement Cost", 10]
                },
                2
              ]
            }
          }
        }
      ],
      "collections": ["films"]
    }
  },
  {
    "query": "select `Address.City` as City,avg(SIZE_OF_ARRAY(`Rentals`)) as AvgRentals from `customers` where `First Name` like 'm%' group by `Address.City`",
    "type": "aggregate",
    "output": {
      "collections": ["customers"],
      "pipeline": [
        {
          "$match": {
            "First Name": {
              "$regex": "^m",
              "$options": "i"
            }
          }
        },
        {
          "$group": {
            "_id": {
              "City": "$Address.City"
            },
            "AvgRentals": {
              "$avg": {
                "$size": "$Rentals"
              }
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "AvgRentals": "$AvgRentals",
            "_id": 0
          }
        }
      ]
    }
  },
  {
    "query": "select  `Address.Country` as Country,avg(SIZE_OF_ARRAY(`Rentals`)) as AvgRentals from `customers` where `First Name` like 'm%' group by `Country`",
    "type": "aggregate",
    "output": {
      "collections": ["customers"],
      "pipeline": [
        {
          "$match": {
            "First Name": {
              "$regex": "^m",
              "$options": "i"
            }
          }
        },
        {
          "$group": {
            "_id": {
              "Country": "$Address.Country"
            },
            "AvgRentals": {
              "$avg": {
                "$size": "$Rentals"
              }
            }
          }
        },
        {
          "$project": {
            "Country": "$_id.Country",
            "AvgRentals": "$AvgRentals",
            "_id": 0
          }
        }
      ]
    }
  },
  {
    "query": "select  `Address.Country` as Country,`Address.City` as City,avg(SIZE_OF_ARRAY(`Rentals`)) as AvgRentals from `customers` where `First Name` like 'm%' group by `Address.Country`,`City`",
    "type": "aggregate",
    "output": {
      "collections": ["customers"],
      "pipeline": [
        {
          "$match": {
            "First Name": {
              "$regex": "^m",
              "$options": "i"
            }
          }
        },
        {
          "$group": {
            "_id": {
              "Country": "$Address.Country",
              "City": "$Address.City"
            },
            "AvgRentals": {
              "$avg": {
                "$size": "$Rentals"
              }
            }
          }
        },
        {
          "$project": {
            "Country": "$_id.Country",
            "City": "$_id.City",
            "AvgRentals": "$AvgRentals",
            "_id": 0
          }
        }
      ]
    }
  },
  {
    "query": "select `Address.City` as City,abs(-1) as absId from `customers` where `First Name` like 'm%' and abs(-1) >=1",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$match": {
            "$and": [
              {
                "First Name": {
                  "$options": "i",
                  "$regex": "^m"
                }
              },
              {
                "$expr": {
                  "$gte": [
                    {
                      "$abs": {
                        "$literal": -1
                      }
                    },
                    1
                  ]
                }
              }
            ]
          }
        },
        {
          "$project": {
            "City": "$Address.City",
            "absId": {
              "$abs": {
                "$literal": -1
              }
            }
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select `Address.City` as City,mod(`id`, 10) as modId,avg(SIZE_OF_ARRAY(`Rentals`)) as AvgRentals from `customers` where `First Name` like 'm%' and mod(`id`, 10)  > 1 group by `Address.City`,modId having AvgRentals > 2 order by `Address.City`,modId",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$match": {
            "$and": [
              {
                "First Name": {
                  "$options": "i",
                  "$regex": "^m"
                }
              },
              {
                "$expr": {
                  "$gt": [
                    {
                      "$mod": [
                        "$id",
                        {
                          "$literal": 10
                        }
                      ]
                    },
                    1
                  ]
                }
              }
            ]
          }
        },
        {
          "$group": {
            "_id": {
              "City": "$Address.City",
              "modId": {
                "$mod": [
                  "$id",
                  {
                    "$literal": 10
                  }
                ]
              }
            },
            "AvgRentals": {
              "$avg": {
                "$size": "$Rentals"
              }
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "modId": "$_id.modId",
            "_id": 0,
            "AvgRentals": "$AvgRentals"
          }
        },
        {
          "$match": {
            "AvgRentals": {
              "$gt": 2
            }
          }
        },
        {
          "$sort": {
            "City": 1,
            "modId": 1
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select `Address.City` as City,mod(`id`, 10) as modId,avg(SIZE_OF_ARRAY(`Rentals`)) as AvgRentals from `customers` where `First Name` like 'm%' and mod(`id`, 10)  > 1 group by `Address.City`,modId having AvgRentals > 2 order by `City`,modId",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$match": {
            "$and": [
              {
                "First Name": {
                  "$options": "i",
                  "$regex": "^m"
                }
              },
              {
                "$expr": {
                  "$gt": [
                    {
                      "$mod": [
                        "$id",
                        {
                          "$literal": 10
                        }
                      ]
                    },
                    1
                  ]
                }
              }
            ]
          }
        },
        {
          "$group": {
            "_id": {
              "City": "$Address.City",
              "modId": {
                "$mod": [
                  "$id",
                  {
                    "$literal": 10
                  }
                ]
              }
            },
            "AvgRentals": {
              "$avg": {
                "$size": "$Rentals"
              }
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "modId": "$_id.modId",
            "_id": 0,
            "AvgRentals": "$AvgRentals"
          }
        },
        {
          "$match": {
            "AvgRentals": {
              "$gt": 2
            }
          }
        },
        {
          "$sort": {
            "City": 1,
            "modId": 1
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select t as `$$ROOT` from (select id,`First Name`,`Last Name`,SIZE_OF_ARRAY(Rentals,'id')  as numRentals from customers) as t",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "id": "$id",
            "First Name": "$First Name",
            "Last Name": "$Last Name",
            "numRentals": {
              "$size": "$Rentals"
            }
          }
        },
        {
          "$project": {
            "t": "$$ROOT"
          }
        },
        {
          "$replaceRoot": {
            "newRoot": "$t"
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: Unwind",
    "query": "select id,`First Name`,unwind(Rentals) as Rental  from customers",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "id": "$id",
            "First Name": "$First Name",
            "Rental": "$Rentals"
          }
        },
        {
          "$unset": "Rentals"
        },
        {
          "$unwind": {
            "path": "$Rental",
            "preserveNullAndEmptyArrays": true
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: Unwind",
    "query": "select id,`First Name`,unwind(Rentals) as Rentals  from customers",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "id": "$id",
            "First Name": "$First Name",
            "Rentals": "$Rentals"
          }
        },
        {
          "$unwind": {
            "path": "$Rentals",
            "preserveNullAndEmptyArrays": true
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select id,`First Name`,unwind((select `Film Title` from Rentals)) as Rental  from customers",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "id": "$id",
            "First Name": "$First Name",
            "Rental": {
              "$map": {
                "input": "$Rentals",
                "in": {
                  "Film Title": "$$this.Film Title"
                }
              }
            }
          }
        },
        {
          "$unwind": {
            "path": "$Rental",
            "preserveNullAndEmptyArrays": true
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select (select id,`First Name` as Name) as t1, (select id,`Last Name` as LastName) as t2,MERGE_OBJECTS(t1,t2) as `$$ROOT`  from customers",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "t1": {
              "$arrayToObject": {
                "$concatArrays": [
                  {
                    "$objectToArray": {
                      "id": "$id",
                      "Name": "$First Name"
                    }
                  }
                ]
              }
            },
            "t2": {
              "$arrayToObject": {
                "$concatArrays": [
                  {
                    "$objectToArray": {
                      "id": "$id",
                      "LastName": "$Last Name"
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "$replaceRoot": {
            "newRoot": {
              "$mergeObjects": ["$t1", "$t2"]
            }
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select c.* from customers  as c",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "c": "$$ROOT"
          }
        },
        {
          "$project": {
            "c": "$c"
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select c as `$$ROOT` from customers  as c",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "c": "$$ROOT"
          }
        },
        {
          "$replaceRoot": {
            "newRoot": "$c"
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select sum(`id`) as aggrVal,`Address.City` as City  from `customers` group by `Address.City` order by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {
              "City": "$Address.City"
            },
            "aggrVal": {
              "$sum": "$id"
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "_id": 0,
            "aggrVal": "$aggrVal"
          }
        },
        {
          "$sort": {
            "City": 1
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select avg(`id`) as aggrVal,`Address.City` as City  from `customers` group by `Address.City` order by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {
              "City": "$Address.City"
            },
            "aggrVal": {
              "$avg": "$id"
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "_id": 0,
            "aggrVal": "$aggrVal"
          }
        },
        {
          "$sort": {
            "City": 1
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select min(`id`) as aggrVal,`Address.City` as City  from `customers` group by `Address.City` order by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {
              "City": "$Address.City"
            },
            "aggrVal": {
              "$min": "$id"
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "_id": 0,
            "aggrVal": "$aggrVal"
          }
        },
        {
          "$sort": {
            "City": 1
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select max(`id`) as aggrVal,`Address.City` as City  from `customers` group by `Address.City` order by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {
              "City": "$Address.City"
            },
            "aggrVal": {
              "$max": "$id"
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "_id": 0,
            "aggrVal": "$aggrVal"
          }
        },
        {
          "$sort": {
            "City": 1
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "query": "select count(*) as countVal,`Address.City` as City  from `customers` group by `Address.City` order by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {
              "City": "$Address.City"
            },
            "countVal": {
              "$sum": 1
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "_id": 0,
            "countVal": "$countVal"
          }
        },
        {
          "$sort": {
            "City": 1
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Select sum case with values only",
    "query": "select sum(case when id <50 then 1 when id >= 50 then -1 else 0 end) as sumCase,`Address.City` as City from `customers` group by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {
              "City": "$Address.City"
            },
            "sumCase": {
              "$sum": {
                "$switch": {
                  "branches": [
                    {
                      "case": {
                        "$lt": ["$id", 50]
                      },
                      "then": 1
                    },
                    {
                      "case": {
                        "$gte": ["$id", 50]
                      },
                      "then": -1
                    }
                  ],
                  "default": {
                    "$literal": 0
                  }
                }
              }
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "_id": 0,
            "sumCase": "$sumCase"
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Select sum case with fields and values",
    "query": "select sum(case when `Address.City`='Ueda' then 1 else 0 end) as Ueda,sum(case when `Address.City`='Tete' then 1 else 0 end) as Tete from `customers` group by `xxx`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {},
            "Ueda": {
              "$sum": {
                "$switch": {
                  "branches": [
                    {
                      "case": {
                        "$eq": ["$Address.City", "Ueda"]
                      },
                      "then": 1
                    }
                  ],
                  "default": {
                    "$literal": 0
                  }
                }
              }
            },
            "Tete": {
              "$sum": {
                "$switch": {
                  "branches": [
                    {
                      "case": {
                        "$eq": ["$Address.City", "Tete"]
                      },
                      "then": 1
                    }
                  ],
                  "default": {
                    "$literal": 0
                  }
                }
              }
            }
          }
        },
        {
          "$project": {
            "_id": 0,
            "Ueda": "$Ueda",
            "Tete": "$Tete"
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate:Test Sum Case with field",
    "query": "select sum(case when `Address.City`='Ueda' then `id` else 0 end) as Ueda,sum(case when `Address.City`='Tete' then `id` else 0 end) as Tete from `customers` group by `xxx`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {},
            "Ueda": {
              "$sum": {
                "$switch": {
                  "branches": [
                    {
                      "case": {
                        "$eq": ["$Address.City", "Ueda"]
                      },
                      "then": "$id"
                    }
                  ],
                  "default": {
                    "$literal": 0
                  }
                }
              }
            },
            "Tete": {
              "$sum": {
                "$switch": {
                  "branches": [
                    {
                      "case": {
                        "$eq": ["$Address.City", "Tete"]
                      },
                      "then": "$id"
                    }
                  ],
                  "default": {
                    "$literal": 0
                  }
                }
              }
            }
          }
        },
        {
          "$project": {
            "_id": 0,
            "Ueda": "$Ueda",
            "Tete": "$Tete"
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate:Test Sum Case with field and groupb by",
    "query": "select sum(case when `Address.City`='Ueda' then `id` else 0 end) as Ueda,sum(case when `Address.City`='Tete' then `id` else 0 end) as Tete from `customers` group by `xxx`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {},
            "Ueda": {
              "$sum": {
                "$switch": {
                  "branches": [
                    {
                      "case": {
                        "$eq": ["$Address.City", "Ueda"]
                      },
                      "then": "$id"
                    }
                  ],
                  "default": {
                    "$literal": 0
                  }
                }
              }
            },
            "Tete": {
              "$sum": {
                "$switch": {
                  "branches": [
                    {
                      "case": {
                        "$eq": ["$Address.City", "Tete"]
                      },
                      "then": "$id"
                    }
                  ],
                  "default": {
                    "$literal": 0
                  }
                }
              }
            }
          }
        },
        {
          "$project": {
            "_id": 0,
            "Ueda": "$Ueda",
            "Tete": "$Tete"
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate:Functions in where",
    "query": "select `Address.City` as City,abs(`id`) as absId from `customers` where `First Name` like 'm%' and abs(`id`) > 1 order by absId",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$match": {
            "$and": [
              {
                "First Name": {
                  "$options": "i",
                  "$regex": "^m"
                }
              },
              {
                "$expr": {
                  "$gt": [
                    {
                      "$abs": "$id"
                    },
                    1
                  ]
                }
              }
            ]
          }
        },
        {
          "$project": {
            "City": "$Address.City",
            "absId": {
              "$abs": "$id"
            }
          }
        },
        {
          "$sort": {
            "absId": 1
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate:$$ROOT with subselect",
    "query": "select c as `$$ROOT`  from (select id,`First Name`,`Last Name`,SIZE_OF_ARRAY(Rentals) as RentalCnt from customers ) as c",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "id": "$id",
            "First Name": "$First Name",
            "Last Name": "$Last Name",
            "RentalCnt": {
              "$size": "$Rentals"
            }
          }
        },
        {
          "$project": {
            "c": "$$ROOT"
          }
        },
        {
          "$replaceRoot": {
            "newRoot": "$c"
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: *,function",
    "query": "select *,SIZE_OF_ARRAY(`Rentals`) as RentalsCount from `customers`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$replaceRoot": {
            "newRoot": {
              "$mergeObjects": [
                "$$ROOT",
                {
                  "RentalsCount": {
                    "$size": "$Rentals"
                  }
                }
              ]
            }
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: sub select with where",
    "query": "select x as '$$ROOT' from (select *,SIZE_OF_ARRAY(`Rentals`) as RentalsCount from `customers`) as x where `x`.`RentalsCount` > 20",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$replaceRoot": {
            "newRoot": {
              "$mergeObjects": [
                "$$ROOT",
                {
                  "RentalsCount": {
                    "$size": "$Rentals"
                  }
                }
              ]
            }
          }
        },
        {
          "$project": {
            "x": "$$ROOT"
          }
        },
        {
          "$match": {
            "x.RentalsCount": {
              "$gt": 20
            }
          }
        },
        {
          "$replaceRoot": {
            "newRoot": "$x"
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: sub select with where",
    "query": "select x as '$$ROOT' from (select *,SIZE_OF_ARRAY(`Rentals`) as RentalsCount from `customers`) as x where `x`.`RentalsCount` > 20",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$replaceRoot": {
            "newRoot": {
              "$mergeObjects": [
                "$$ROOT",
                {
                  "RentalsCount": {
                    "$size": "$Rentals"
                  }
                }
              ]
            }
          }
        },
        {
          "$project": {
            "x": "$$ROOT"
          }
        },
        {
          "$match": {
            "x.RentalsCount": {
              "$gt": 20
            }
          }
        },
        {
          "$replaceRoot": {
            "newRoot": "$x"
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: distinct",
    "query": "select distinct `First Name`,`Last Name` from customers",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {
              "First Name": "$First Name",
              "Last Name": "$Last Name"
            }
          }
        },
        {
          "$project": {
            "First Name": "$_id.First Name",
            "Last Name": "$_id.Last Name",
            "_id": 0
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: distinct with where ",
    "query": "select distinct `First Name`,`Last Name` from customers where id<20",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$match": {
            "id": {
              "$lt": 20
            }
          }
        },
        {
          "$group": {
            "_id": {
              "First Name": "$First Name",
              "Last Name": "$Last Name"
            }
          }
        },
        {
          "$project": {
            "First Name": "$_id.First Name",
            "Last Name": "$_id.Last Name",
            "_id": 0
          }
        }
      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: sum sum array",
    "query": "select sum(sum_array(Rentals,'filmId')) as s from customers",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {},
            "s": {
              "$sum": {
                "$reduce": {
                  "input": "$Rentals",
                  "initialValue": 0,
                  "in": {
                    "$sum": [
                      "$$value",
                      "$$this.filmId"
                    ]
                  }
                }
              }
            }
          }
        },
        {
          "$project": {
            "_id": 0,
            "s": "$s"
          }
        }

      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: sum avg array",
    "query": "select sum(avg_array(Rentals,'filmId')) as s from customers",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {},
            "s": {
              "$sum": {
                "$reduce": {
                  "input": "$Rentals",
                  "initialValue": 0,
                  "in": {
                    "$avg": [
                      "$$value",
                      "$$this.filmId"
                    ]
                  }
                }
              }
            }
          }
        },
        {
          "$project": {
            "_id": 0,
            "s": "$s"
          }
        }
      ],
      "collections": [
        "customers"
      ]
    }
  },
  {
    "name": "Aggregate: avg sum array",
    "query": "select avg(sum_array(Rentals,'filmId')) as s from customers",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {},
            "s": {
              "$avg": {
                "$reduce": {
                  "input": "$Rentals",
                  "initialValue": 0,
                  "in": {
                    "$sum": [
                      "$$value",
                      "$$this.filmId"
                    ]
                  }
                }
              }
            }
          }
        },
        {
          "$project": {
            "_id": 0,
            "s": "$s"
          }
        }

      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: sum case",
    "query": "select sum(case when `Address.City`='Ueda' then 1 else 0 end) as Ueda,sum(case when `Address.City`='Tete' then 1 else 0 end) as Tete from `customers`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {},
            "Ueda": {
              "$sum": {
                "$switch": {
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          "$Address.City",
                          "Ueda"
                        ]
                      },
                      "then": 1
                    }
                  ],
                  "default": {
                    "$literal": 0
                  }
                }
              }
            },
            "Tete": {
              "$sum": {
                "$switch": {
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          "$Address.City",
                          "Tete"
                        ]
                      },
                      "then": 1
                    }
                  ],
                  "default": {
                    "$literal": 0
                  }
                }
              }
            }
          }
        },
        {
          "$project": {
            "_id": 0,
            "Ueda": "$Ueda",
            "Tete": "$Tete"
          }
        }


      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: sum case",
    "query": "select Category,sum(case when `Address.City`='Ueda' then 1 else 0 end) as Ueda,sum(case when `Address.City`='Tete' then 1 else 0 end) as Tete from `customers` group by Category",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {
              "Category": "$Category"
            },
            "Ueda": {
              "$sum": {
                "$switch": {
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          "$Address.City",
                          "Ueda"
                        ]
                      },
                      "then": 1
                    }
                  ],
                  "default": {
                    "$literal": 0
                  }
                }
              }
            },
            "Tete": {
              "$sum": {
                "$switch": {
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          "$Address.City",
                          "Tete"
                        ]
                      },
                      "then": 1
                    }
                  ],
                  "default": {
                    "$literal": 0
                  }
                }
              }
            }
          }
        },
        {
          "$project": {
            "Category": "$_id.Category",
            "_id": 0,
            "Ueda": "$Ueda",
            "Tete": "$Tete"
          }
        }


      ],
      "collections": ["customers"]
    }
  },
  {
    "name": "Aggregate: sum auto group",
    "query": "select sum(filmId) as s from `customers`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$group": {
            "_id": {},
            "s": {
              "$sum": "$filmId"
            }
          }
        },
        {
          "$project": {
            "_id": 0,
            "s": "$s"
          }
        }
      ],
      "collections": ["customers"]
    }
  }
]
